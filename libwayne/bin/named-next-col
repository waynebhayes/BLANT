#!/bin/sh
# Input: a file in which each line contains name value pairs; odd-numbered columns are named, the next column is the value.
# First arg is an awk program that is run on each line, and you can use the names defined in the top line of the input file.

die() { echo "$@" >&2; exit 1
}
newlines() { awk '{for(i=1; i<=NF; i++) print $i}' "$@"
}

QUIET=0

while :; do
    case "$1" in
    -BEGIN) BEGIN="$2"; shift 2;;
    -END) END="$2"; shift 2;;
    -functions) FUNC="$2"; shift 2;;
    -q) QUIET=1; shift ;;
    -*) die "unknown option '$1'" ;;
    *) break;;
    esac
done

PROG="$1"; shift

trap "/bin/rm -f /tmp/input$$ /tmp/vars$$" 0 1 2 3 15
cat "$@" | tee /tmp/input$$ | newlines | grep '^[A-Za-z_][A-Za-z_0-9]*$' | egrep -vi '^(inf|nan)$' > /tmp/vars$$

# Automatically create awk code to assign the appropriate variables from the header
ASSIGN=`cat /tmp/vars$$ | awk 'BEGIN{print "BEGIN{"}{printf "varName[\"%s\"]=1\n", $1;clearVars=clearVars "{"$1"=\"NaN\"}";setVars=setVars"{for(i=1;i<NF;i+=2)if($i==\""$1"\")"$1"=$(i+1)}\n"}END{print "}NF%2==1{print \"WARNING: odd number of columns line \"NR\" <\"$0\">\"}"; print clearVars; print setVars}'`

awk "$FUNC""BEGIN{$BEGIN}"'function MIN(x,y){if(x=="nan"||x=="inf")return 1*y;if(y=="nan"||y=="inf")return 1*x; return 1*x<1*y?1*x:1*y}
    function MAX(x,y){if(x=="nan"||x=="inf")return 1*y;if(y=="nan"||y=="inf")return 1*x; return 1*x>1*y?1*x:1*y}
    function ABS(x){if(x=="nan"||x=="inf")return 0; return 1*x<0?-1*x:1*x}
    '"$ASSIGN"'
    '"$PROG"'
    '"END{$END}" "/tmp/input$$"
